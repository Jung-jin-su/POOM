plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.web3j" version "4.9.8"
}

group = 'com.poom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // basic
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    // to use swagger
    implementation("io.springfox:springfox-swagger2:3.0.0")
    implementation("io.springfox:springfox-swagger-ui:3.0.0")
    implementation("io.springfox:springfox-data-rest:3.0.0")
    implementation("io.springfox:springfox-bean-validators:3.0.0")
    implementation("io.springfox:springfox-boot-starter:3.0.0")

    // to use newArrayList()
    implementation('com.google.guava:guava:31.1-jre')

    // to use AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // to use JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // to use IPFS
    implementation group: 'com.github.ipfs', name: 'java-ipfs-api', version: '1.3.3'

    // to convert json
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

    // gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    //webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // to use OAUTH2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // to use redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.lettuce:lettuce-core'

    // to file upload
    implementation 'commons-fileupload:commons-fileupload:1.4'

}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        solidity {
            srcDir {
                "$projectDir/../contract/contracts"
            }

        }
    }
}
node {
    nodeProjectDir = file("$projectDir/src/main/resources")
}

afterEvaluate {
    tasks.build.dependsOn tasks.getByPath('generateContractWrappers')
}